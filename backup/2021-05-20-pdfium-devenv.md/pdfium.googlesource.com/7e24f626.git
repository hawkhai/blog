<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><meta charset="utf-8" /><title>pdfium.git - Git at Google</title><link rel="stylesheet" type="text/css" href="/+static/base.css" /><link rel="stylesheet" type="text/css" href="/+static/doc.css" /><!-- default customHeadTagPart --></head><body class="Site"><header class="Site-header"><div class="Header"><a class="Header-image" href="/"><img src="//www.gstatic.com/images/branding/lockups/2x/lockup_git_color_108x24dp.png" width="108" height="24" alt="Google Git" /></a><div class="Header-menu"> <a class="Header-menuItem" href="https://accounts.google.com/AccountChooser?service=gerritcodereview&amp;continue=https://pdfium.googlesource.com/login/pdfium.git/">Sign in</a> </div></div></header><div class="Site-content"><div class="Container "><div class="Breadcrumbs"><a class="Breadcrumbs-crumb" href="/?format=HTML">pdfium</a> / <span class="Breadcrumbs-crumb">pdfium.git</span></div><div class="CloneRepo"><div class="CloneRepo-title">Clone this repo:</div><input type="text" class="u-monospace CloneRepo-command" onclick="this.focus();if(this.selectionStart==this.selectionEnd){this.select()}" readonly="readonly" value="git clone https://pdfium.googlesource.com/pdfium" /></div><div class="RepoShortlog"><div class="RepoShortlog-refs"><div class="RefList"><h3 class="RefList-title">Branches</h3><ul class="RefList-items"><li class="RefList-item"><a href="/pdfium.git/+/refs/heads/master">master</a></li><li class="RefList-item"><a href="/pdfium.git/+/refs/heads/chromium/2013">chromium/2013</a></li><li class="RefList-item"><a href="/pdfium.git/+/refs/heads/chromium/2014">chromium/2014</a></li><li class="RefList-item"><a href="/pdfium.git/+/refs/heads/chromium/2015">chromium/2015</a></li><li class="RefList-item"><a href="/pdfium.git/+/refs/heads/chromium/2016">chromium/2016</a></li><li class="RefList-item"><a href="/pdfium.git/+/refs/heads/chromium/2017">chromium/2017</a></li><li class="RefList-item"><a href="/pdfium.git/+/refs/heads/chromium/2018">chromium/2018</a></li><li class="RefList-item"><a href="/pdfium.git/+/refs/heads/chromium/2019">chromium/2019</a></li><li class="RefList-item"><a href="/pdfium.git/+/refs/heads/chromium/2020">chromium/2020</a></li><li class="RefList-item"><a href="/pdfium.git/+/refs/heads/chromium/2021">chromium/2021</a></li></ul></div><a href="/pdfium.git/+refs">More...</a><div class="RefList"><h3 class="RefList-title">Tags</h3><ul class="RefList-items"><li class="RefList-item"><a href="/pdfium.git/+/refs/tags/old_master_before_xfa">old_master_before_xfa</a></li></ul></div></div><div class="RepoShortlog-log"><ol class="CommitLog"><li class="CommitLog-item CommitLog-item--chromiumOneline"><a class="u-sha1 u-monospace CommitLog-sha1" href="/pdfium.git/+/4fd3f635cab0e35582baf9de03c3666036b52733">4fd3f63</a> <a href="/pdfium.git/+/4fd3f635cab0e35582baf9de03c3666036b52733">Clean up enumerated types in cxfa_node.h</a> <span class="CommitLog-author" title="tsepez@chromium.org">by Tom Sepez</span> <span class="CommitLog-time" title="Fri May 21 00:15:00 2021 +0000">· 12 hours ago</span> <a class="CommitLog-branchLabel" href="/pdfium.git/+/refs/heads/master">master</a></li><li class="CommitLog-item CommitLog-item--chromiumOneline"><a class="u-sha1 u-monospace CommitLog-sha1" href="/pdfium.git/+/0b29099c2e2fe9a47c8851d0aa3bfe7a34878f4a">0b29099</a> <a href="/pdfium.git/+/0b29099c2e2fe9a47c8851d0aa3bfe7a34878f4a">Improve test for CJS_Field::get_button_position()</a> <span class="CommitLog-author" title="tsepez@chromium.org">by Tom Sepez</span> <span class="CommitLog-time" title="Thu May 20 20:46:46 2021 +0000">· 15 hours ago</span></li><li class="CommitLog-item CommitLog-item--chromiumOneline"><a class="u-sha1 u-monospace CommitLog-sha1" href="/pdfium.git/+/ccf220dd605982e9c78b4f0c49d33d1e254096b6">ccf220d</a> <a href="/pdfium.git/+/ccf220dd605982e9c78b4f0c49d33d1e254096b6">Replace XFA_PAGEVIEWEVENT_* defines with nested enum class</a> <span class="CommitLog-author" title="tsepez@chromium.org">by Tom Sepez</span> <span class="CommitLog-time" title="Thu May 20 20:08:25 2021 +0000">· 16 hours ago</span></li><li class="CommitLog-item CommitLog-item--chromiumOneline"><a class="u-sha1 u-monospace CommitLog-sha1" href="/pdfium.git/+/d48f207d9e43ac600e1f69a5f98cc3e3ff269e14">d48f207</a> <a href="/pdfium.git/+/d48f207d9e43ac600e1f69a5f98cc3e3ff269e14">Remove some #defines from fx_crypt.h</a> <span class="CommitLog-author" title="tsepez@chromium.org">by Tom Sepez</span> <span class="CommitLog-time" title="Thu May 20 18:56:39 2021 +0000">· 17 hours ago</span></li><li class="CommitLog-item CommitLog-item--chromiumOneline"><a class="u-sha1 u-monospace CommitLog-sha1" href="/pdfium.git/+/a613368b7346ffbb8407c3bb3566573031f96ae0">a613368</a> <a href="/pdfium.git/+/a613368b7346ffbb8407c3bb3566573031f96ae0">Remove VARIABLETEXT_HALF definition</a> <span class="CommitLog-author" title="tsepez@chromium.org">by Tom Sepez</span> <span class="CommitLog-time" title="Thu May 20 18:24:47 2021 +0000">· 18 hours ago</span></li></ol><nav class="LogNav"><a class="LogNav-next" href="/pdfium.git/+log">More »</a></nav><div class="doc RepoIndexDoc"><h1><a class="h" name="PDFium" href="#PDFium"><span></span></a><a class="h" name="pdfium" href="#pdfium"><span></span></a>PDFium</h1><h2><a class="h" name="Prerequisites" href="#Prerequisites"><span></span></a><a class="h" name="prerequisites" href="#prerequisites"><span></span></a>Prerequisites</h2><p>PDFium uses the same build tooling as Chromium. See the platform-specific Chromium build instructions to get started, but replace Chromium's “Get the code” instructions with <a href="#get-the-code">PDFium's</a>.</p><ul><li><a href="https://chromium.googlesource.com/chromium/src/+/main/docs/linux/build_instructions.md">Chromium Linux build instructions</a></li><li><a href="https://chromium.googlesource.com/chromium/src/+/main/docs/mac_build_instructions.md">Chromium Mac build instructions</a></li><li><a href="https://chromium.googlesource.com/chromium/src/+/main/docs/windows_build_instructions.md">Chromium Windows build instructions</a></li></ul><h3><a class="h" name="CPU-Architectures-supported" href="#CPU-Architectures-supported"><span></span></a><a class="h" name="cpu-architectures-supported" href="#cpu-architectures-supported"><span></span></a>CPU Architectures supported</h3><p>The default architecture for Windows, Linux, and Mac is “<code class="code">x64</code>”. On Windows, “<code class="code">x86</code>” is also supported. GN parameter “<code class="code">target_cpu = "x86"</code>” can be used to override the default value. If you specify Android build, the default CPU architecture will be “<code class="code">arm</code>”.</p><p>It is expected that there are still some places lurking in the code which will not function properly on big-endian architectures. Bugs and/or patches are welcome, however providing this support is <strong>not</strong> a priority at this time.</p><h4><a class="h" name="Google-employees" href="#Google-employees"><span></span></a><a class="h" name="google-employees" href="#google-employees"><span></span></a>Google employees</h4><p>Run: <code class="code">download_from_google_storage --config</code> and follow the authentication instructions. <strong>Note that you must authenticate with your @google.com credentials</strong>. Enter “0” if asked for a project-id.</p><p>Once you've done this, the toolchain will be installed automatically for you in the <a href="#generate-the-build-files">Generate the build files</a> step below.</p><p>The toolchain will be in <code class="code">depot_tools\win_toolchain\vs_files\&lt;hash&gt;</code>, and windbg can be found in <code class="code">depot_tools\win_toolchain\vs_files\&lt;hash&gt;\win_sdk\Debuggers</code>.</p><p>If you want the IDE for debugging and editing, you will need to install it separately, but this is optional and not needed for building PDFium.</p><h2><a class="h" name="Get-the-code" href="#Get-the-code"><span></span></a><a class="h" name="get-the-code" href="#get-the-code"><span></span></a>Get the code</h2><p>The name of the top-level directory does not matter. In the following example, the directory name is “repo”. This directory must not have been used before by <code class="code">gclient config</code> as each directory can only house a single gclient configuration.</p><pre class="code">mkdir repo
cd repo
gclient config --unmanaged https://pdfium.googlesource.com/pdfium.git
gclient sync
cd pdfium
</pre><p>On Linux, additional build dependencies need to be installed by running the following from the <code class="code">pdfium</code> directory.</p><pre class="code">./build/install-build-deps.sh
</pre><h2><a class="h" name="Generate-the-build-files" href="#Generate-the-build-files"><span></span></a><a class="h" name="generate-the-build-files" href="#generate-the-build-files"><span></span></a>Generate the build files</h2><p>PDFium uses GN to generate the build files and <a href="https://ninja-build.org/">Ninja</a> to execute the build files.  Both of these are included with the depot_tools checkout.</p><h3><a class="h" name="Selecting-build-configuration" href="#Selecting-build-configuration"><span></span></a><a class="h" name="selecting-build-configuration" href="#selecting-build-configuration"><span></span></a>Selecting build configuration</h3><p>PDFium may be built either with or without JavaScript support, and with or without XFA forms support.  Both of these features are enabled by default. Also note that the XFA feature requires JavaScript.</p><p>Configuration is done by executing <code class="code">gn args &lt;directory&gt;</code> to configure the build. This will launch an editor in which you can set the following arguments. By convention, <code class="code">&lt;directory&gt;</code> should be named <code class="code">out/foo</code>, and some tools / test support code only works if one follows this convention. A typical <code class="code">&lt;directory&gt;</code> name is <code class="code">out/Debug</code>.</p><pre class="code">use_goma = true  # Googlers only. Make sure goma is installed and running first.
is_debug = true  # Enable debugging features.

# Set true to enable experimental Skia backend.
pdf_use_skia = false
# Set true to enable experimental Skia backend (paths only).
pdf_use_skia_paths = false

pdf_enable_xfa = true  # Set false to remove XFA support (implies JS support).
pdf_enable_v8 = true  # Set false to remove Javascript support.
pdf_is_standalone = true  # Set for a non-embedded build.
is_component_build = false # Disable component build (Though it should work)
</pre><p>For sample applications like <code class="code">pdfium_test</code> to build, one must set <code class="code">pdf_is_standalone = true</code>.</p><p>By default, the entire project builds with C++14. When building with the experimental Skia backend, Skia itself it built with C++17.</p><p>When complete the arguments will be stored in <code class="code">&lt;directory&gt;/args.gn</code>, and GN will automatically use the new arguments to generate build files. Should your files fail to generate, please double-check that you have set use_sysroot as indicated above.</p><h2><a class="h" name="Building-the-code" href="#Building-the-code"><span></span></a><a class="h" name="building-the-code" href="#building-the-code"><span></span></a>Building the code</h2><p>You can build the sample program by running: <code class="code">ninja -C &lt;directory&gt; pdfium_test</code> You can build the entire product (which includes a few unit tests) by running: <code class="code">ninja -C &lt;directory&gt; pdfium_all</code>.</p><h2><a class="h" name="Running-the-sample-program" href="#Running-the-sample-program"><span></span></a><a class="h" name="running-the-sample-program" href="#running-the-sample-program"><span></span></a>Running the sample program</h2><p>The pdfium_test program supports reading, parsing, and rasterizing the pages of a .pdf file to .ppm or .png output image files (Windows supports two other formats). For example: <code class="code">&lt;directory&gt;/pdfium_test --ppm path/to/myfile.pdf</code>. Note that this will write output images to <code class="code">path/to/myfile.pdf.&lt;n&gt;.ppm</code>. Run <code class="code">pdfium_test --help</code> to see all the options.</p><h2><a class="h" name="Testing" href="#Testing"><span></span></a><a class="h" name="testing" href="#testing"><span></span></a>Testing</h2><p>There are currently several test suites that can be run:</p><ul><li>pdfium_unittests</li><li>pdfium_embeddertests</li><li>testing/tools/run_corpus_tests.py</li><li>testing/tools/run_javascript_tests.py</li><li>testing/tools/run_pixel_tests.py</li></ul><p>It is possible the tests in the <code class="code">testing</code> directory can fail due to font differences on the various platforms. These tests are reliable on the bots. If you see failures, it can be a good idea to run the tests on the tip-of-tree checkout to see if the same failures appear.</p><h3><a class="h" name="Pixel-Tests" href="#Pixel-Tests"><span></span></a><a class="h" name="pixel-tests" href="#pixel-tests"><span></span></a>Pixel Tests</h3><p>If your change affects rendering, a pixel test should be added. Simply add a <code class="code">.in</code> or <code class="code">.pdf</code> file in <code class="code">testing/resources/pixel</code> and the pixel runner will pick it up at the next run.</p><p>Make sure that your test case doesn't have any copyright issues. It should also be a minimal test case focusing on the bug that renders the same way in many PDF viewers. Try to avoid binary data in streams by using the <code class="code">ASCIIHexDecode</code> simply because it makes the PDF more readable in a text editor.</p><p>To try out your new test, you can call the <code class="code">run_pixel_tests.py</code> script:</p><pre class="code"><span class="pln">$ </span><span class="pun">./</span><span class="pln">testing</span><span class="pun">/</span><span class="pln">tools</span><span class="pun">/</span><span class="pln">run_pixel_tests</span><span class="pun">.</span><span class="pln">py your_new_file</span><span class="pun">.</span><span class="kwd">in</span><span class="pln">
</span></pre><p>To generate the expected image, you can use the <code class="code">make_expected.sh</code> script:</p><pre class="code"><span class="pln">$ </span><span class="pun">./</span><span class="pln">testing</span><span class="pun">/</span><span class="pln">tools</span><span class="pun">/</span><span class="pln">make_expected</span><span class="pun">.</span><span class="pln">sh your_new_file</span><span class="pun">.</span><span class="pln">pdf
</span></pre><p>Please make sure to have <code class="code">optipng</code> installed which optimized the file size of the resulting png.</p><h3><a class="h" name="files" href="#files"><span></span></a><code class="code">.in</code> files</h3><p><code class="code">.in</code> files are PDF template files. PDF files contain many byte offsets that have to be kept correct or the file won't be valid. The template makes this easier by replacing the byte offsets with certain keywords.</p><p>This saves space and also allows an easy way to reduce the test case to the essentials as you can simply remove everything that is not necessary.</p><p>A simple example can be found <a href="https://pdfium.googlesource.com/pdfium/+/refs/heads/master/testing/resources/rectangles.in">here</a>.</p><p>To transform this into a PDF, you can use the <code class="code">fixup_pdf_template.py</code> tool:</p><pre class="code"><span class="pln">$ </span><span class="pun">./</span><span class="pln">testing</span><span class="pun">/</span><span class="pln">tools</span><span class="pun">/</span><span class="pln">fixup_pdf_template</span><span class="pun">.</span><span class="pln">py your_file</span><span class="pun">.</span><span class="kwd">in</span><span class="pln">
</span></pre><p>This will create a <code class="code">your_file.pdf</code> in the same directory as <code class="code">your_file.in</code>.</p><p>There is no official style guide for the .in file, but a consistent style is preferred simply to help with readability. If possible, object numbers should be consecutive and <code class="code">/Type</code> and <code class="code">/SubType</code> should be on top of a dictionary to make object identification easier.</p><h2><a class="h" name="Embedding-PDFium-in-your-own-projects" href="#Embedding-PDFium-in-your-own-projects"><span></span></a><a class="h" name="embedding-pdfium-in-your-own-projects" href="#embedding-pdfium-in-your-own-projects"><span></span></a>Embedding PDFium in your own projects</h2><p>The public/ directory contains header files for the APIs available for use by embedders of PDFium. The PDFium project endeavors to keep these as stable as possible.</p><p>Outside of the public/ directory, code may change at any time, and embedders should not directly call these routines.</p><h2><a class="h" name="Code-Coverage" href="#Code-Coverage"><span></span></a><a class="h" name="code-coverage" href="#code-coverage"><span></span></a>Code Coverage</h2><p>Code coverage reports for PDFium can be generated in Linux development environments. Details can be found <a href="pdfium.git/+/HEAD/docs/code-coverage.md">here</a>.</p><p>Chromium provides code coverage reports for PDFium <a href="https://chromium-coverage.appspot.com/">here</a>. PDFium is located in <code class="code">third_party/pdfium</code> in Chromium‘s source code. This includes code coverage from PDFium’s fuzzers.</p><h2><a class="h" name="Waterfall" href="#Waterfall"><span></span></a><a class="h" name="waterfall" href="#waterfall"><span></span></a>Waterfall</h2><p>The current health of the source tree can be found <a href="https://ci.chromium.org/p/pdfium/g/main/console">here</a>.</p><h2><a class="h" name="Community" href="#Community"><span></span></a><a class="h" name="community" href="#community"><span></span></a>Community</h2><p>There are several mailing lists that are setup:</p><ul><li><a href="https://groups.google.com/forum/#!forum/pdfium">PDFium</a></li><li><a href="https://groups.google.com/forum/#!forum/pdfium-reviews">PDFium Reviews</a></li><li><a href="https://groups.google.com/forum/#!forum/pdfium-bugs">PDFium Bugs</a></li></ul><p>Note, the Reviews and Bugs lists are typically read-only.</p><h2><a class="h" name="Bugs" href="#Bugs"><span></span></a><a class="h" name="bugs" href="#bugs"><span></span></a>Bugs</h2><p>PDFium uses this <a href="https://bugs.chromium.org/p/pdfium/issues/list">bug tracker</a>, but for security bugs, please use <a href="https://bugs.chromium.org/p/chromium/issues/entry?template=Security%20Bug">Chromium's security bug template</a> and add the “Cr-Internals-Plugins-PDF” label.</p><h2><a class="h" name="Contributing-code" href="#Contributing-code"><span></span></a><a class="h" name="contributing-code" href="#contributing-code"><span></span></a>Contributing code</h2><p>See the <a href="pdfium.git/+/HEAD/CONTRIBUTING.md">CONTRIBUTING</a> document for more information on contributing to the PDFium project.</p></div></div></div></div> <!-- Container --></div> <!-- Site-content --><footer class="Site-footer"><div class="Footer"><span class="Footer-poweredBy">Powered by <a href="https://gerrit.googlesource.com/gitiles/">Gitiles</a>| <a href="https://policies.google.com/privacy">Privacy</a></span><span class="Footer-formats"><a class="u-monospace Footer-formatsItem" href="?format=TEXT">txt</a> <a class="u-monospace Footer-formatsItem" href="?format=JSON">json</a></span></div></footer></body></html>